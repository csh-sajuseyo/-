/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
*  Copyright 2015 Adobe Systems Incorporated
*  All Rights Reserved.
*
* NOTICE:  All information contained herein is, and remains
* the property of Adobe Systems Incorporated and its suppliers,
* if any.  The intellectual and technical concepts contained
* herein are proprietary to Adobe Systems Incorporated and its
* suppliers and are protected by all applicable intellectual property laws,
* including trade secret and or copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe Systems Incorporated.
**************************************************************************/
class FABManager{constructor(){if(FABManager.instance)return FABManager.instance;FABManager.instance=this,this.shadowRoot=null,this.hasShownSettingsMenu=!1,this.actionableCoachmark=new ActionableCoachmark}sendAnalyticsEvent=e=>{try{chrome.runtime.sendMessage({main_op:"analytics",analytics:e})}catch(e){}};isFABRendered(){return Boolean(this.shadowRoot)}removeFAB(){this.shadowRoot?.host?.remove(),this.shadowRoot=null,this.hasShownSettingsMenu=!1}renderFAB(){if(this.actionableCoachmark.isRendered())return;if(this.isFABRendered())return;const e=document.createElement("div");e.id="aiFabShadowRoot",e.style.display="block",this.shadowRoot=e.attachShadow({mode:"open"}),fetch(chrome.runtime.getURL("resources/SidePanel/sidePanelButton.html")).then((e=>e.text())).then((async t=>{const s=document.createElement("template");s.innerHTML=t;const o=s.content;this.shadowRoot.appendChild(o.cloneNode(!0));const n=this.shadowRoot.querySelector(".close-btn"),i=this.shadowRoot.querySelector(".acrobat-button");this.shadowRoot.querySelector(".acrobat-button-container").addEventListener("mousedown",(async()=>{this.hideSettingsMenu(),n.classList?.remove("showCloseButton"),await GenAIWebpageEligibilityService.shouldDisableTouchpoints()||(this.sendAnalyticsEvent([["DCBrowserExt:SidePanel:FabIcon:Clicked"]]),chrome.runtime.sendMessage({type:"open_side_panel",touchpoint:"FAB"}))}));const a=this.shadowRoot.querySelector(".tooltip-text span:first-child");await GenAIWebpageEligibilityService.shouldDisableTouchpoints()?(i.classList.add("disabled"),a.id="tooltipTextDisabled",this.sendAnalyticsEvent([["DCBrowserExt:SidePanel:FabIcon:Disabled"]])):this.sendAnalyticsEvent([["DCBrowserExt:SidePanel:FabIcon:Enabled"]]),i.addEventListener("mouseenter",(()=>{n.classList.add("showCloseButton")})),i.addEventListener("mouseleave",(()=>{this.hasShownSettingsMenu||n.classList.remove("showCloseButton")})),n.addEventListener("click",(e=>{e.preventDefault(),e.stopPropagation(),this.hasShownSettingsMenu?this.hideSettingsMenu():this.showSettingsMenu()})),n.addEventListener("mousedown",(e=>{e.stopImmediatePropagation(),e.preventDefault()})),util.translateElements(".translate",this.shadowRoot),document.documentElement.appendChild(e)}))}hideSettingsMenu(){this.shadowRoot.querySelector(".close-btn").classList.remove("open");const e=this.shadowRoot?.querySelector(".fab-view-settings-dialog");if(e){const e=this.shadowRoot?.querySelector(".tooltip-text");e&&(e.style.display="block");const t=this.shadowRoot.querySelector(".fab-view-settings-dialog");t?.classList?.remove("showDialog")}this.hasShownSettingsMenu=!1}async hideFabForDomain(e){await initDcLocalStorage();const t=window.dcLocalStorage.getItem("hideFabDomainList")||[];t.includes(e)||t.push(e),window.dcLocalStorage.setItem("hideFabDomainList",t)}async neverDisplayFab(){await initDcLocalStorage(),window.dcLocalStorage.setItem("enableGenAIFab","false")}showSettingsMenu(){this.shadowRoot.querySelector(".close-btn").classList.add("open"),fetch(chrome.runtime.getURL("resources/SidePanel/FABViewSettings.html")).then((e=>e.text())).then((e=>{const t=this.shadowRoot?.querySelector(".tooltip-text");t&&(t.style.display="none");const s=this.shadowRoot.querySelector(".fab-view-settings-dialog");s.innerHTML=e,s.classList.add("showDialog"),this.hasShownSettingsMenu=!0,util.translateElements(".translate",this.shadowRoot);const o=new URL(window.location.href).hostname;["hideForNow","hideFabForDomain","neverDisplayFab","preferences"].forEach((e=>{this.shadowRoot.getElementById(e)?.addEventListener("click",(async()=>{switch(e){case"hideForNow":this.removeFAB(),this.sendAnalyticsEvent([["DCBrowserExt:SidePanel:SettingsMenu:RemoveFab"]]);break;case"hideFabForDomain":this.hideFabForDomain(o),this.sendAnalyticsEvent([["DCBrowserExt:SidePanel:SettingsMenu:RemoveFabForDomain"]]),this.removeFAB();break;case"neverDisplayFab":this.neverDisplayFab(),this.sendAnalyticsEvent([["DCBrowserExt:SidePanel:SettingsMenu:NeverDisplay"]]),this.removeFAB();break;case"preferences":chrome.runtime.sendMessage({type:"open_options_page"}),this.sendAnalyticsEvent([["DCBrowserExt:SidePanel:SettingsMenu:PreferencesClicked"]])}}))}))}))}}